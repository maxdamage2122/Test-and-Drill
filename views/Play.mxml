<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="components.*"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		actionBarVisible="false" clipAndEnableScrolling="true" overlayControls="true"
		viewActivate="viewActivateHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			import tv.digitalretro.components.MessageBox;
			import tv.digitalretro.events.MessageBoxEvent;
			import flash.events.IOErrorEvent;   
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var playername:String;
			private var file:File;
			private var fileStream:FileStream;
			private var fileName:String = "level1.txt";
			private var directory:String = "leaderboards";
			
			protected var round:int = 1;
			protected var level:int = 1;
			protected var score:int = 0;
			protected var levelTime:int = 60;
			protected var myTimer:Timer = new Timer(1000,levelTime);
			
			protected function rightValue_changeHandler(event:TextOperationEvent):void
			{
				if (int(rightValue.text) != rightSlider.value)
					rightSlider.value=int(rightValue.text);
			}
			
			protected function okBtn_clickHandler(event:MouseEvent):void
			{
				var msgBox:MessageBox = MessageBox.show(this.parent, MessageBox.MB_OK, MessageBox.IC_INFO, getRoundString(), getScoresString());
				msgBox.addEventListener(MessageBoxEvent.MESSAGEBOX_OK, msgBox_onOK);
				myTimer.stop();
				away3dScene.loadModel();
				
			}
			private function save():void
			{
				// Create file object (resolve user's documents directory, add own directory and file name)
				file = File.documentsDirectory.resolvePath(directory + "\\" + fileName);
				// FileStream for writing the file
				fileStream = new FileStream();
				// Open the file in write mode
				fileStream.open(file, FileMode.WRITE);
				// Write the ArrayCollection object of persons to the file
				fileStream.writeObject(playername) as String;
				fileStream.writeInt(score);
				// Close FileStream
				fileStream.close();
			}
			private function read():void
			{
				// Get hte correct path
				file = File.documentsDirectory.resolvePath(directory + "\\" + fileName);
				
				// read the file if it exists
				if(file.exists)
				{
					// FileStream for reading the file
					fileStream = new FileStream();
					// Open the file in read mode
					fileStream.open(file, FileMode.READ);
					// Read the ArrayCollection object of persons from the file
					playername = fileStream.readObject() as String;
					// Close the FileStream
					fileStream.close();
				}
				else
				{
					// some sample data + save if file does not exist
					playername="Man";
					score=0;
					save();
				}
			}
			
			private function getRoundString():String
			{
				var round:String = "";
				return round.concat("Round ",this.round," Scores");
			}
			
			private function getScoresString():String
			{
				var scores:String = "";
				// used for testing
				var temp1:String = "";
				var temp2:String = "";
				if ((leftSlider.value<(away3dScene.distance+(away3dScene.distance*0.05)))&&(leftSlider.value>(away3dScene.distance-(away3dScene.distance*0.05))))
					temp1="yes";
				if ((rightSlider.value<(away3dScene.angle+5))&&(rightSlider.value>(away3dScene.angle-5)))
					temp2="yes";
				
				scores=scores.concat("Answer:\n",away3dScene.distance," yards at ",away3dScene.angle," degrees.",temp1,"\n\n",
									"Guess:\n",leftSlider.value," yards at ",rightSlider.value," degrees.",temp2);
				return scores;
			}
			private function getLevelScoreString():String
			{
				var levelScore:String = "";
				levelScore=levelScore.concat("Your score for Level ",level," was ",score,"\n\n","Enter your name to record your score on the leaderboard.");
				return levelScore;
			}
			
			private function msgBox_onOK(event:MessageBoxEvent):void
			{
				if ((leftSlider.value<(away3dScene.distance+(away3dScene.distance*0.05)))&&(leftSlider.value>(away3dScene.distance-(away3dScene.distance*0.05))))
					score++;
				if ((rightSlider.value<(away3dScene.angle+5))&&(rightSlider.value>(away3dScene.angle-5)))
					score++;
				if (round < 10)
				{
					round++;
					myTimer.start();
				}
				else
				{
					var msgBox:MessageBox = MessageBox.show(this.parent, MessageBox.MB_OK, MessageBox.IC_INFO, "CONGRATULATIONS", "You have completed this level.");
					msgBox.addEventListener(MessageBoxEvent.MESSAGEBOX_OK, msgBox_onEndOK);
					round=0;
					score+=levelTime;
					myTimer.reset();
					levelTime=60;
					
				}
			}
			private function msgBox_onEndOK(event:MessageBoxEvent):void
			{
				var msgBox:MessageBox = MessageBox.show(this.parent, MessageBox.MB_ENTER, MessageBox.IC_SAVE, "LEADERBOARD", getLevelScoreString());
				msgBox.addEventListener(MessageBoxEvent.MESSAGEBOX_ENTER, msgBox_onEnter);
				
			}
			private function msgBox_onEnter(event:MessageBoxEvent):void
			{
				save();
				level++;
				score=0;
			}
			
			private function backClicked():void
			{
				myTimer.stop();
				var msgBox:MessageBox = MessageBox.show(this.parent, MessageBox.MB_YESNO, MessageBox.IC_ALERT, "WARNING", "All progress during this level will be lost.\n\nAre you sure you want to quit?");
				msgBox.addEventListener(MessageBoxEvent.MESSAGEBOX_YES, backClicked_onYes);
				msgBox.addEventListener(MessageBoxEvent.MESSAGEBOX_NO, msgBox_onNo);
			}
			
			private function backClicked_onYes(event:MessageBoxEvent):void
			{
				navigator.popView();
			}
			
			private function msgBox_onNo(event:MessageBoxEvent):void
			{
				myTimer.start();
			}

			protected function viewActivateHandler(event:FlexEvent):void
			{
				away3dScene.loadModel();
				levelTimer();
				
			}
			protected function levelTimer():void
			{
				
				var count:Number = 60;
				levelTime=60;
				
				//var myTimer:Timer = new Timer(1000,count);
				
				myTimer.addEventListener(TimerEvent.TIMER, countdown);
				
				myTimer.start();
				
				function countdown(event:TimerEvent):void {
					if (levelTime!=0){
						levelTime--;
					timerValue.text=String(levelTime);
					}
					
				}
				
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>	 
	
	<s:Group top="0" width="68.5%" height="100%" horizontalCenter="0">
		<components:Away3dScene id="away3dScene" width="100%" height="100%"/>
	</s:Group>
	
	<s:Image x="0" y="0" width="25%" height="100%" scaleMode="stretch" smooth="true"
			 source="images/LeftPanelBackground.png"/>
	<s:Image y="0" right="0" width="25%" height="100%" scaleMode="stretch" smooth="true"
			 source="images/RightPanelBackground.png"/>
	
	<s:HGroup x="0" y="0" width="15.7%" height="100%" gap="0">
		<mx:Spacer width="5%" height="100%"/>
		<s:VGroup width="90%" height="100%" gap="0">
			<mx:Spacer width="100%" height="6%"/>
			<s:TextInput id="timerValue" width="100%" height="10%" enabled="false" fontSize="13"
						 fontWeight="normal" text="" textAlign="center"/>
			<mx:Spacer width="100%" height="15%"/>
			
			<s:HGroup width="100%" height="50%" gap="0">
				<s:VSlider id="leftSlider" width="48%" height="100%" liveDragging="true" maximum="10000"
						   minimum="10" skinClass="components.VSliderSkin"/>
				<mx:Spacer width="4%" height="100%"/>
				<s:VGroup width="48%" height="100%" gap="0">
					<s:TextInput id="leftValue" width="100%" height="32%" enabled="false" fontSize="13"
								 fontWeight="normal" text="{leftSlider.value}" textAlign="center"/>
					<mx:Spacer width="100%" height="2%"/>
					<s:Button id="leftPlus" width="100%" height="32%" label="+" autoRepeat="true" minHeight="0"
							  buttonDown="leftSlider.value=leftSlider.value+1" cornerRadius="2" skinClass="components.ButtonSkin"/>
					<mx:Spacer width="100%" height="2%"/>
					<s:Button id="leftMinus" width="100%" height="32%" label="-" autoRepeat="true" minHeight="0"
							  buttonDown="leftSlider.value=leftSlider.value-1" skinClass="components.ButtonSkin"/>
				</s:VGroup>
			</s:HGroup>
			<mx:Spacer width="100%" height="2%"/>
			<s:Button width="100%" height="15%" minHeight="0" label="Back" click="backClicked()"
					  fontSize="18" skinClass="components.ButtonSkin"/>
		</s:VGroup>
	</s:HGroup>
	
	<s:HGroup y="0" right="0" width="15.7%" height="100%" gap="0">
		<mx:Spacer width="5%" height="100%"/>
		<s:VGroup width="90%" height="100%" gap="0">
			<mx:Spacer width="100%" height="31%"/>
			<s:HGroup width="100%" height="50%" gap="0">
				<s:VGroup width="48%" height="100%" gap="0">
					<s:TextInput id="rightValue" width="100%" height="32%" enabled="false" fontSize="13"
								 fontWeight="normal" text="{Math.abs(rightSlider.value)}" textAlign="center"/>
					<mx:Spacer width="100%" height="2%"/>
					<s:Button id="rightPlus" width="100%" height="32%" label="+" autoRepeat="true" minHeight="0"
							  buttonDown="rightSlider.value=rightSlider.value+1" cornerRadius="2" skinClass="components.ButtonSkin"/>
					<mx:Spacer width="100%" height="2%"/>
					<s:Button id="rightMinus" width="100%" height="32%" label="-" autoRepeat="true" minHeight="0"
							  buttonDown="rightSlider.value=rightSlider.value-1" skinClass="components.ButtonSkin"/>
				</s:VGroup>
				<mx:Spacer width="4%" height="100%"/>
				<s:VSlider id="rightSlider" width="48%" height="100%" liveDragging="true" maximum="180"
						   minimum="-180" skinClass="components.VSliderSkin"/>
			</s:HGroup>
			<mx:Spacer width="100%" height="2%"/>
			<s:Button width="100%" height="15%" minHeight="0" label="Submit"
					  click="okBtn_clickHandler(event)" fontSize="18"
					  skinClass="components.ButtonSkin"/>
		</s:VGroup>
	</s:HGroup>

</s:View>
